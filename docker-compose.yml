version: "3.9"

services:
  nginx:
    image: nginx:1.15.12-alpine
    container_name: ${APP_NAME}-web
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./web:/var/www/html:rw,cached
      - ./config/nginx/default.conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
    environment:
      - "NGINX_ENVSUBST_TEMPLATE_SUFFIX=.conf"
      - "DOMAIN=${DOMAIN}"
    networks:
      - app-network
  
  certbot:
    depends_on:
      - nginx
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - ./web:/var/www/html
    command: certonly --webroot --webroot-path=/var/www/html --email ${EMAIL} --agree-tos --no-eff-email --staging -d ${DOMAIN} -d www.${DOMAIN}
  
  php:
    image: php:8-fpm-alpine
    container_name: php
    restart: always
    build:
        context: ./docker/php
        dockerfile: Dockerfile
    ports:
        - 9000:9000
    environment:
        - XDEBUG_CONFIG="xdebug.idekey=${XDEBUG_IDE_KEY}"
    volumes:
        - ./web:/var/www/html
        - ~/.composer:/var/www/.composer:delegated
        - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini:delegated
    networks:
        - web

  mysql:
    image: mariadb:latest
    container_name: ${APP_NAME}-mysql
    volumes:
      - db_data:/var/lib/mysql:delegated
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

  redis:
    image: redis:5.0.6-alpine
    container_name: redis
    ports:
        - "${REDIS_PORT}:6379"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELK_VERSION}
    container_name: elasticsearch
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata01:/usr/share/elasticsearch/data
      - ./config/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
    networks:
       - elk

  logstash:
    image: docker.elastic.co/logstash/logstash:${ELK_VERSION}
    container_name: logstash
    volumes:
      - ./config/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./config/logstash/logstash/pipeline:/usr/share/logstash/pipeline
    ports:
      - 5000:5000
      - 9600:9600
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:${ELK_VERSION}
    container_name: kibana
    volumes:
        - ./config/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
        - "5601:5601"
    networks:
        - elk
    depends_on:
        - elasticsearch

volumes:
  certbot-etc:
  db_data:
  esdata01:
    driver: local

networks:
  app-network:
    driver: bridge
  elk:
    driver: bridge